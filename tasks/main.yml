---
# tasks file for base
- name: activate epel
  ansible.builtin.lineinfile:
    path: /etc/yum.repos.d/oracle-epel-ol7.repo
    regexp: '^enabled=0'
    line: enabled=1

- name: Install chrony
  package:
    name: chrony
    state: latest # noqa package-latest

- name: Activate cron job to run Ansible
  ansible.builtin.cron:
    name: Schedule for Ansible
    minute: "*/15"
    job: "/usr/bin/ansible-playbook -i localhost, /opt/oci-rsa/{{ ansible_playbook_name }}/main.yml --connection=local"

- name: Ensure chrony.conf has correct server
  ansible.builtin.lineinfile:
    path: /etc/chrony.conf
    regexp: '^server'
    line: 'server 169.254.169.254 iburst'
  notify: 
    - Restart chronyd

- name: Install suricata
  package:
    name: suricata
    state: present # noqa package-latest

- name: Update suricata rules
  ansible.builtin.command: /bin/suricata-update
  args:
    creates: /var/lib/suricata/rules/suricata.rules

- name: deploy suricata sysconfig
  ansible.builtin.template:
    src: suricata.sysconfig.j2
    dest: /etc/sysconfig/suricata
    owner: root
    group: root
    mode: '0644'
  notify: 
    - Restart suricata

- name: schedule suricata update
  ansible.builtin.cron:
    name: Schedule for suricata
    minute: "13"
    hour: "1"
    job: "/bin/suricata-update"

- name: scanning deployment 
  meta: noop

- name: Install lynis
  package:
    name: lynis
    state: latest # noqa package-latest

- name: Install nmap
  package:
    name: nmap
    state: latest # noqa package-latest

- name: Install git
  package:
    name: git
    state: latest # noqa package-latest

- name: Install scipag (from Github)
  ansible.builtin.git:
    repo: 'https://github.com/scipag/vulscan'
    dest: '/opt/scipag_vulscan'

- name: schedule nmap scanner
  ansible.builtin.cron:
    name: Schedule for nmap scanner
    user: nobody
    minute: "23"
    hour: "3"
    job: '/usr/bin/nmap -Pn -sV --script=/opt/scipag_vulscan/vulscan.nse localhost | logger -t nmap_scipag_vulscan'

- name: schedule lynis pentest
  ansible.builtin.cron:
    name: Schedule for lynis pentest
    user: root
    minute: "23"
    hour: "2"
    job: '/bin/lynis audit system --pentest'

- name: Add the wazuh group
  ansible.builtin.group:
    name: wazuh
    state: present

- name: Add the wazuh user
  ansible.builtin.user:
    name: wazuh
    comment: Wazuh User
    group: wazuh

- name: deploy software inventory
  ansible.builtin.template:
    src: software_inventory.sh
    dest: "{{ temp_report_path }}"
    owner: root
    group: root
    mode: "u+rwx"

- name: schedule software inventory
  ansible.builtin.cron:
    name: Schedule for software inventory
    month: "8"
    day: "18"
    hour: "21"
    minute: "23"
    job: "{{ temp_report_path }}/software_inventory.sh"

#- name: run software inventory
#  shell: rpm -qa --queryformat '%{NAME}, "%{VENDOR}", %{VERSION}, "%{LICENSE}", "%{SUMMARY}"\n' | grep -iv oracle | sort > {{ temp_report_path }}/inventory.csv
#  args:
#    warn: false
#  become: true
#
#- name: put the software inventory result to bucket
#  shell: "oci os object put -bn {{ resource_bucket_name }} --name {{ file_name }} --file {{ temp_report_path }}/inventory.csv --force"
#  environment:
#    OCI_CLI_AUTH: instance_principal
#  become: true

- name: remove the inventory report from instance
  file:
    state: absent
    path:  "{{ temp_report_path }}/inventory.csv"
  become: true